{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Informatica and Tableau Solution is a QuickStart that provides an integrated deployment of Informatica Intelligent Cloud Services , Enterprise Data Catalog , Tableau Server, Redshift cluster,RDS in the same VPC through Cloudformation templates that provision and configure the required resources, including related QuickStarts. This master template provisions a new VPC and Remote Desktop Gateways by leveraging existing Quick Starts.  Within the new VPC, it creates an Amazon EC2 Windows instance and related resources for Tableau Server.   You will be billed for the AWS resources used if you create a stack from this template. (qs-1p141m382)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Informatica Intelligent Cloud Services Credentials"
                    },
                    "Parameters": [
                        "EmailID",
                        "IICSUsername",
                        "IICSPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCDefinition",
                        "RemoteAccessCIDR",
                        "HostedZoneName"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon Redshift Configuration"
                    },
                    "Parameters": [
                        "RedshiftDatabaseName",
                        "RedshiftUsername",
                        "RedshiftPassword",
                        "ConfirmRedshiftPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Environment and Machine Configuration"
                    },
                    "Parameters": [
                        "KeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS RDS Configuration"
                    },
                    "Parameters": [
                        "RDSInstancePassword",
                        "ConfirmRDSInstancePassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Enterprise Data Catalog Configuration"
                    },
                    "Parameters": [
                        "InformaticaAdminUsername",
                        "InformaticaAdminPassword",
                        "ConfirmInformaticaAdminPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Tableau Remote Desktop Gateway Configuration"
                    },
                    "Parameters": [
                        "RemoteDesktopGatewayAdminUser",
                        "RemoteDesktopGatewayAdminPassword",
                        "DomainDNSName"
                    ]
                },
                {
                    "Label": {
                        "default": "Tableau Server Configuration"
                    },
                    "Parameters": [
                        "TableauManagerUsername",
                        "TableauManagerPassword",
                        "TableauServerAdminUser",
                        "TableauServerAdminPassword",
                        "TableauServerLicenseKey"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "TableauServerAdminUser": {
                    "default": "Tableau Server administrator username"
                },
                "TableauServerAdminPassword": {
                    "default": "Tableau Server administrator password"
                },
                "EmailID": {
                    "default": "Work email"
                },
                "TableauManagerUsername": {
                    "default": "Tableau Services Manager (TSM) administrator username"
                },
                "TableauManagerPassword": {
                    "default": "Tableau Services Manager (TSM) administrator password"
                },
                "DomainDNSName": {
                    "default": "Domain DNS name"
                },
                "HostedZoneName": {
                    "default": "Hosted Zone name"
                },
                "KeyPairName": {
                    "default": "Key pair name"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 bucket name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 key prefix"
                },
                "RemoteDesktopGatewayAdminPassword": {
                    "default": "Remote Desktop Gateway admin password"
                },
                "RemoteDesktopGatewayAdminUser": {
                    "default": "Remote Desktop Gateway admin username"
                },
                "RedshiftDatabaseName": {
                    "default": "Redshift database name"
                },
                "RedshiftPassword": {
                    "default": "Redshift password"
                },
                "ConfirmRedshiftPassword": {
                    "default": "Confirm Redshift password"
                },
                "RedshiftUsername": {
                    "default": "Redshift username"
                },
                "TableauServerLicenseKey": {
                    "default": "Tableau Server license key"
                },
                "VPCDefinition": {
                    "default": "VPC definition"
                },
                "IICSUsername": {
                    "default": "IICS username"
                },
                "IICSPassword": {
                    "default": "IICS password"
                },
                "ConfirmRDSInstancePassword": {
                    "default": "Confirm RDS instance password"
                },
                "RDSInstancePassword": {
                    "default": "RDS instance password"
                },
                "InformaticaAdminUsername": {
                    "default": "Informatica administrator username"
                },
                "InformaticaAdminPassword": {
                    "default": "Informatica administrator password"
                },
                "ConfirmInformaticaAdminPassword": {
                    "default": "Confirm Informatica administrator password"
                },
                "RemoteAccessCIDR": {
                    "default": "Remote Access CIDR"
                }
            }
        }
    },
    "Parameters": {
        "VPCDefinition": {
            "Default": "QuickstartDefault",
            "Description": "VPC Definition name from Map maintained in this Quick Start's master template. You can support multiple VPC Definitions by extending this Map and choosing the appropriate name. If you do not need to change the VPC Definition, choose the default.",
            "Type": "String",
            "MinLength": "1",
            "ConstraintDescription": "Mandatory field"
        },
        "DomainDNSName": {
            "Default": "example.com",
            "Description": "Fully qualified domain name (FQDN) e.g. example.com.DNS can only have 3 to 63 characters long alphanumeric, dot and hyphen. It can't have only numbers or dot and hyphen at the end.",
            "MaxLength": "63",
            "MinLength": "3",
            "Type": "String",
            "AllowedPattern": "^(?![0-9]+$)(?!-)[a-zA-Z0-9\\-.]{3,63}(?<![.-])$",
            "ConstraintDescription": "DNS can only have 3 to 63 characters long alphanumeric, dot and hyphen. It can't have only numbers or dot and hyphen at the end."
        },
        "HostedZoneName": {
            "Default": "<NONE>",
            "Description": "Name of Hosted Zone within which the Quick Start will create convenient DNS entries for AWS Resources created by the Quick Start. If you do not need to create DNS entries or are not using AWS Route53 for DNS, leave the default value '<NONE>', otherwise enter the Hosted Zone name including the trailing period, for example 'dev.example.com.'.",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved. Please provide atleast 2 availability zones.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the VPC. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses. For example, if your IPv4 address is 203.0.113.25, specify 203.0.113.25/32 to list this single IPv4 address in CIDR notation. If your company allocates addresses from a range, specify the entire range, such as 203.0.113.0/24. For details, see VPCs and Subnets in the AWS documentation.",
            "Type": "String"
        },
        "RemoteDesktopGatewayAdminPassword": {
            "AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[^\\s\\w])(?!.*[&]).{8,32}$",
            "Description": "Password for the administrative account. Must be at least 8 to 32 characters containing letters, numbers and symbols (without ampersand).Password should not contain the user name.",
            "MaxLength": "32",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String",
            "ConstraintDescription": "Password Must be at least 8 to 32 characters containing letters, numbers and symbols (without ampersand).Password should not contain the user name."
        },
        "RemoteDesktopGatewayAdminUser": {
            "AllowedPattern": "[a-zA-Z0-9]*",
            "Default": "admin",
            "Description": "User name for the new local administrator account.",
            "MaxLength": "25",
            "MinLength": "5",
            "Type": "String"
        },
        "IICSUsername": {
            "Description": "Informatica Intelligent Cloud Services user name.",
            "Type": "String",
            "MinLength": "2"
        },
        "IICSPassword": {
            "AllowedPattern": "[a-zA-Z0-9~`!#$%^&*()-_+={}|;:,.<>\\[\\]]*",
            "ConstraintDescription": "Between 8 and 64 chars in length; must contain at least one uppercase letter, one lowercase letter, and one number; can use any printable ASCII character (ASCII code 33 to 126) except ' (single quote), \" (double quote), \\, /, @, or space.",
            "Description": "The password associated with the Informatica Intelligent Cloud Services user name.",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "EmailID": {
            "Description": "Enter the e-mail address used for IICS registration. It is also used for Tableau trial account.",
            "Type": "String",
            "AllowedPattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
            "ConstraintDescription": "email can have only one @. Allowed alphanumeric characters, underscore, period, hyphen and 2-5 character as domain extension"
        },
        "TableauServerAdminPassword": {
            "Description": "The password for the initial Admin user for Tableau server.",
            "NoEcho": "true",
            "Type": "String",
            "MinLength": "1",
            "MaxLength": "120"
        },
        "TableauServerAdminUser": {
            "Default": "admin",
            "Description": "The name of the initial Admin user for Tableau Server. Only alphanumeric characters and underscore are allowed. Should begin with an alphabetical character. The value must be 5 - 20 characters in length.",
            "MinLength": "5",
            "MaxLength": "20",
            "Type": "String",
            "AllowedPattern": "^([a-zA-Z][a-z0-9A-Z_]{4,20})$",
            "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabetical character. The value must be 5 – 20 characters in length."
        },
        "TableauManagerUsername": {
            "Description": "Tableau Services Manager (TSM) administrator username (cannot be Administrator).Only alphanumeric characters and underscore are allowed. Should begin with an alphabetical character. The value must be 3-30 characters in length.",
            "Type": "String",
            "AllowedPattern": "(?!Administrator|administrator)\\b\\w{3,30}",
            "MinLength": "3",
            "MaxLength": "30",
            "Default": "admin",
            "ConstraintDescription": "Only alphanumeric characters and underscore are allowed. Should begin with an alphabetical character. The value must be 3-30 characters in length."
        },
        "TableauManagerPassword": {
            "Description": "Tableau Services Manager (TSM) administrator password. Password must be at least 8 characters in length. Should contain at least one special character, number, upper-case and lower-case character. Double quote(\") and dollar($) are not allowed.",
            "Type": "String",
            "NoEcho": "true",
            "AllowedPattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[^\\s\\w])(?!.*[\"$]).{8,120}$",
            "MinLength": "8",
            "MaxLength": "120",
            "ConstraintDescription": "Password must be at least 8 characters in length. Should contain at least one special character, number, upper-case and lower-case character. Double quote(\") and dollar($) are not allowed"
        },
        "TableauServerLicenseKey": {
            "Default": "",
            "Description": "License Key. Leave blank for trial.",
            "Type": "String"
        },
        "RedshiftDatabaseName": {
            "AllowedPattern": "([a-z]|[0-9])+",
            "ConstraintDescription": "must contain a-z or 0-9 only.",
            "Default": "quickstart",
            "Description": "The name of the database to be created in the Redshift cluster for storing visualization data. Please provide the valid database name if you are using an existing cluster for visualization data. The name must contain only a-z or 0-9.",
            "Type": "String"
        },
        "RedshiftPassword": {
            "AllowedPattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d!#$%&\\(\\)*+,-.;<=>?\\[\\]^_`{|}~]{8,64}$",
            "ConstraintDescription": "Between 8 and 64 chars in length; must contain at least one uppercase letter, one lowercase letter, and one number; can use any printable ASCII character (ASCII code 33 to 126) except ' (single quote), \" (double quote), \\, /, @, or space.",
            "Description": "The password associated with the master user account for the Redshift cluster that is being created. It should be between 8 and 64 chars in length; must contain at least one uppercase letter, one lowercase letter, and one number.",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "ConfirmRedshiftPassword": {
            "AllowedPattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d!#$%&\\(\\)*+,-.;<=>?\\[\\]^_`{|}~]{8,64}$",
            "ConstraintDescription": "Between 8 and 64 chars in length; must contain at least one uppercase letter, one lowercase letter, and one number; can use any printable ASCII character (ASCII code 33 to 126) except ' (single quote), \" (double quote), \\, /, @, or space.",
            "Description": "Confirm the password associated with the master user account for the Redshift cluster that is being created. It must match the value provided in RedshiftPassword field.",
            "MaxLength": "64",
            "MinLength": "8",
            "NoEcho": "true",
            "Type": "String"
        },
        "RedshiftUsername": {
            "AllowedPattern": "([a-z])([a-z]|[0-9])*",
            "ConstraintDescription": "must start with a-z and contain only a-z or 0-9.",
            "Default": "redshift",
            "Description": "The user name associated with the master user account for the Redshift cluster that is being created. It must start with a-z and contain only a-z or 0-9.",
            "Type": "String"
        },
        "RDSInstancePassword": {
            "Description": "Password for the database instance associated with Informatica services and Tableau Server tasks. It must contain between 8 to 30 printable ASCII characters (excluding /,\", and @).",
            "Type": "String",
            "NoEcho": "True",
            "MinLength": "8",
            "MaxLength": "30",
            "AllowedPattern": "([A-Za-z0-9_!#$]{8,30})",
            "ConstraintDescription": "It must contain between 8 to 30 printable ASCII characters (excluding /,\", and @)."
        },
        "ConfirmRDSInstancePassword": {
            "Description": "Confirm password for the database instance associated with Informatica services and Tableau Server tasks. It must match the value provided in RDSInstancePassword field.",
            "Type": "String",
            "NoEcho": "True",
            "MinLength": "8",
            "MaxLength": "30",
            "AllowedPattern": "([A-Za-z0-9_!#$]{8,30})",
            "ConstraintDescription": "It must contain between 8 to 30 printable ASCII characters (excluding /,\", and @)."
        },
        "InformaticaAdminUsername": {
            "Description": "User name to access Informatica Administrator. User name must be between 4 to 15 characters and start with a character. Only alphanumeric characters and underscore are allowed.",
            "Type": "String",
            "MinLength": "4",
            "MaxLength": "15",
            "AllowedPattern": "^([a-zA-Z][a-zA-Z0-9_]{3,15})$",
            "ConstraintDescription": "User name must be between 4 to 15 characters and start with a character. Only alphanumeric characters and underscore are allowed."
        },
        "InformaticaAdminPassword": {
            "Description": "Password to access Informatica Administrator.Password must be between 5 to 64 characters and start with a character. Only alphanumeric characters and underscore are allowed.",
            "Type": "String",
            "NoEcho": "True",
            "MinLength": "5",
            "MaxLength": "64",
            "AllowedPattern": "^([a-zA-Z][a-zA-Z0-9_]{4,64})$",
            "ConstraintDescription": "Password must be between 5 to 64 characters and start with a character. Only alphanumeric characters and underscore are allowed."
        },
        "ConfirmInformaticaAdminPassword": {
            "Description": "Confirm Password to access Informatica Administrator. It must match the value provided in InformaticaAdminPassword field.",
            "Type": "String",
            "NoEcho": "True",
            "MinLength": "5",
            "MaxLength": "64",
            "AllowedPattern": "^([a-zA-Z][a-zA-Z0-9_]{4,64})$",
            "ConstraintDescription": "Password must be between 5 to 64 characters and start with a character. Only alphanumeric characters and underscore are allowed."
        },
        "KeyPairName": {
            "Description": "The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches.",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "MinLength": "1",
            "ConstraintDescription": "Specifying EC2 keypair is mandatory"
        },
        "QSS3BucketName": {
            "AllowedPattern": "(?=^.{3,63}$)(?!^(\\d+\\.)+\\d+$)(^([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])$)",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-informatica-tableau-analytics/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        }
    },
    "Rules": {
        "matchRedshiftPasswords": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "RedshiftPassword"
                            },
                            {
                                "Ref": "ConfirmRedshiftPassword"
                            }
                        ]
                    },
                    "AssertDescription": "Redshift passwords do not match"
                }
            ]
        },
        "matchDBPasswords": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "RDSInstancePassword"
                            },
                            {
                                "Ref": "ConfirmRDSInstancePassword"
                            }
                        ]
                    },
                    "AssertDescription": "RDS passwords do not match"
                }
            ]
        },
        "matchAdministratorPasswords": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::Equals": [
                            {
                                "Ref": "InformaticaAdminPassword"
                            },
                            {
                                "Ref": "ConfirmInformaticaAdminPassword"
                            }
                        ]
                    },
                    "AssertDescription": "Informatica passwords do not match"
                }
            ]
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Mappings": {
        "VPCDefinitions": {
            "QuickstartDefault": {
                "CreateAdditionalPrivateSubnets": "false",
                "NATInstanceType": "t2.small",
                "NumberOfAZs": "2",
                "PrivateSubnet1ACIDR": "10.0.0.0/19",
                "PrivateSubnet1BCIDR": "10.0.192.0/21",
                "PrivateSubnet2ACIDR": "10.0.32.0/19",
                "PrivateSubnet2BCIDR": "10.0.200.0/21",
                "PrivateSubnet3ACIDR": "10.0.64.0/19",
                "PrivateSubnet3BCIDR": "10.0.208.0/21",
                "PrivateSubnet4ACIDR": "10.0.96.0/19",
                "PrivateSubnet4BCIDR": "10.0.216.0/21",
                "PublicSubnet1CIDR": "10.0.128.0/20",
                "PublicSubnet2CIDR": "10.0.144.0/20",
                "PublicSubnet3CIDR": "10.0.160.0/20",
                "PublicSubnet4CIDR": "10.0.176.0/20",
                "VPCCIDR": "10.0.0.0/16"
            }
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "NumberOfAZs": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "NumberOfAZs"
                        ]
                    },
                    "PrivateSubnet1ACIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet1ACIDR"
                        ]
                    },
                    "PrivateSubnet2ACIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet2ACIDR"
                        ]
                    },
                    "PrivateSubnet3ACIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet3ACIDR"
                        ]
                    },
                    "PrivateSubnet4ACIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet4ACIDR"
                        ]
                    },
                    "PublicSubnet1CIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PublicSubnet1CIDR"
                        ]
                    },
                    "PublicSubnet2CIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PublicSubnet2CIDR"
                        ]
                    },
                    "PublicSubnet3CIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PublicSubnet3CIDR"
                        ]
                    },
                    "PublicSubnet4CIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PublicSubnet4CIDR"
                        ]
                    },
                    "CreateAdditionalPrivateSubnets": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "CreateAdditionalPrivateSubnets"
                        ]
                    },
                    "PrivateSubnet1BCIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet1BCIDR"
                        ]
                    },
                    "PrivateSubnet2BCIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet2BCIDR"
                        ]
                    },
                    "PrivateSubnet3BCIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet3BCIDR"
                        ]
                    },
                    "PrivateSubnet4BCIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "PrivateSubnet4BCIDR"
                        ]
                    },
                    "NATInstanceType": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "NATInstanceType"
                        ]
                    },
                    "VPCCIDR": {
                        "Fn::FindInMap": [
                            "VPCDefinitions",
                            {
                                "Ref": "VPCDefinition"
                            },
                            "VPCCIDR"
                        ]
                    }
                }
            }
        },
        "RDGWStack": {
            "Type": "AWS::CloudFormation::Stack",
            "DependsOn": "VPCStack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-microsoft-rdgateway/templates/rdgw-standalone.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "AdminPassword": {
                        "Ref": "RemoteDesktopGatewayAdminPassword"
                    },
                    "AdminUser": {
                        "Ref": "RemoteDesktopGatewayAdminUser"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "DomainDNSName": {
                        "Ref": "DomainDNSName"
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-microsoft-rdgateway/"
                    },
                    "RDGWInstanceType": "t2.large",
                    "RDGWCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    }
                }
            }
        },
        "TableauAwsdataStack": {
            "DependsOn": "VPCStack",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/informatics-tableau-analytics.template",
                        {
                            "QSS3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "Parameters": {
                    "TableauServerAdminPassword": {
                        "Ref": "TableauServerAdminPassword"
                    },
                    "TableauServerAdminUser": {
                        "Ref": "TableauServerAdminUser"
                    },
                    "HostedZoneName": {
                        "Ref": "HostedZoneName"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "PrivateSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnet2ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "RedshiftDatabaseName": {
                        "Ref": "RedshiftDatabaseName"
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "ConfirmRedshiftPassword": {
                        "Ref": "ConfirmRedshiftPassword"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "EmailID": {
                        "Ref": "EmailID"
                    },
                    "RootStackName": {
                        "Ref": "AWS::StackName"
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "VPCCIDR": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCCIDR"
                        ]
                    },
                    "TableauServerLicenseKey": {
                        "Ref": "TableauServerLicenseKey"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "RDSInstancePassword": {
                        "Ref": "RDSInstancePassword"
                    },
                    "ConfirmRDSInstancePassword": {
                        "Ref": "ConfirmRDSInstancePassword"
                    },
                    "RedshiftHost": "<NONE>",
                    "InformaticaAdminUsername": {
                        "Ref": "InformaticaAdminUsername"
                    },
                    "InformaticaAdminPassword": {
                        "Ref": "InformaticaAdminPassword"
                    },
                    "ConfirmInformaticaAdminPassword": {
                        "Ref": "ConfirmInformaticaAdminPassword"
                    },
                    "IICSPassword": {
                        "Ref": "IICSPassword"
                    },
                    "IICSUsername": {
                        "Ref": "IICSUsername"
                    },
                    "TableauManagerUsername": {
                        "Ref": "TableauManagerUsername"
                    },
                    "TableauManagerPassword": {
                        "Ref": "TableauManagerPassword"
                    }
                }
            }
        }
    },
    "Outputs": {
        "TableauServerURL": {
            "Description": "URL through which Tableau Server can be accessed.",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.TableauServerURL"
                ]
            }
        },
        "InformaticaAdminConsoleURL": {
            "Description": "URL through which Informatica Admin Console can be accessed.",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.InformaticaAdminConsoleURL"
                ]
            }
        },
        "EDCCatalogURL": {
            "Description": "URL through which EDC Catalog can be accessed.",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.EDCCatalogUrl"
                ]
            }
        },
        "EDCAdminUrl": {
            "Description": "URL through which EDC Admin can be accessed.",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.EDCAdminUrl"
                ]
            }
        },
        "TableauServerPublicName": {
            "Description": "Convenient Name for TableauServer Public Access",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.TableauServerPublicName"
                ]
            }
        },
        "TableauServerPrivateName": {
            "Description": "Convenient Name for TableauServer Private Access",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.TableauServerPrivateName"
                ]
            }
        },
        "RedshiftPrivateName": {
            "Description": "Convenient Name for Redshift Private Access",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.RedshiftPrivateName"
                ]
            }
        },
        "InformaticaDomainPublicName": {
            "Description": "Convenient Name for Informatica Domain Public Access",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.InformaticaDomainPublicName"
                ]
            }
        },
        "RDSPrivateName": {
            "Description": "Convenient Name for Postgres RDS Private Access",
            "Value": {
                "Fn::GetAtt": [
                    "TableauAwsdataStack",
                    "Outputs.RDSPrivateName"
                ]
            }
        }
    }
}