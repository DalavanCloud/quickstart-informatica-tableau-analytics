{  
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"Informatica and Tableau Solution is a QuickStart that provides an integrated deployment of Informatica Intelligent Cloud Services , Enterprise Data Catalog , Tableau Server, Redshift cluster,RDS in the same VPC through Cloudformation templates that provision and configure the required resources, including related QuickStarts. This awsdata template provisions all of the resources that are specific to the awsdata Quick Start.  Leveraged Quick Starts (VPC,RDGW), if needed, can be provisioned by using the awsdata-master template. **WARNING** This template creates Amazon EC2 Windows and linux instances and related resources for Tableau and Informatica servers. It also creates an  Amazon Redshift cluster if the user is not using a cluster in existing VPC ,an Oracle RDS for Informatica Domain and analytics with tableau. IAM Roles required for EC2 and Redshift access to data in S3. You will be billed for the AWS resources used if you create a stack from this template.",
   "Metadata":{  
      "AWS::CloudFormation::Interface":{  
         "ParameterGroups":[  
            {  
               "Label":{  
                  "default":"Informatica Intelligent Cloud Services Credentials"
               },
               "Parameters":[ 
				  "EmailID",			   
                  "IICSUsername",
                  "IICSPassword"
               ]
            },
            {  
               "Label":{  
                  "default":"Network Configuration"
               },
               "Parameters":[  
                  "VPCID",
                  "VPCCIDR",
                  "PrivateSubnet1ID",
                  "PrivateSubnet2ID",
                  "PublicSubnet1ID",
                  "HostedZoneName",
                  "RemoteDesktopGatewayElasticIP",
                  "RemoteAccessCIDR"
               ]
            },
            {  
               "Label":{  
                  "default":"Amazon Redshift Configuration"
               },
               "Parameters":[  
                  "RedshiftHost",
                  "RedshiftDatabaseName",
                  "RedshiftUsername",
                  "RedshiftPassword",
                  "ConfirmRedshiftPassword"
               ]
            },
            {  
               "Label":{  
                  "default":"AWS Environment and Machine Configuration"
               },
               "Parameters":[  
                  "KeyPairName"
               ]
            },
			{  
               "Label":{  
                  "default":"AWS RDS Configuration"
               },
               "Parameters":[  
                  "RDSInstancePassword",
                  "ConfirmRDSInstancePassword"
               ]
            },
            {  
               "Label":{  
                  "default":"Enterprise Data Catalog Configuration"
               },
               "Parameters":[  
                  "InformaticaAdminUsername",
                  "InformaticaAdminPassword",
                  "ConfirmInformaticaAdminPassword"
               ]
            },
            {  
               "Label":{  
                  "default":"Tableau Server Configuration"
               },
               "Parameters":[  
                  "TableauManagerUsername",
                  "TableauManagerPassword",
                  "TableauServerAdminUser",
                  "TableauServerAdminPassword",
                  "TableauServerLicenseKey"
               ]
            },
            {  
               "Label":{  
                  "default":"AWS Quick Start Configuration"
               },
               "Parameters":[  
                  "RootStackName",
                  "QSS3BucketName",
                  "QSS3KeyPrefix"
               ]
            }
         ],
         "ParameterLabels":{  
            "RedshiftHost":{  
               "default":"Amazon Redshift Host (optional)"
            },
            "TableauServerAdminUser":{  
               "default":"Tableau Server Administrator Username*"
            },
            "TableauServerAdminPassword":{  
               "default":"Tableau Server Administrator Password*"
            },
            "EmailID":{  
               "default":"Work Email*"
            },
            "TableauManagerUsername":{  
               "default":"Tableau Services Manager (TSM) Administrator Username*"
            },
            "TableauManagerPassword":{  
               "default":"Tableau Services Manager (TSM) Administrator Password*"
            },
            "HostedZoneName":{  
               "default":"Hosted Zone Name"
            },
            "KeyPairName":{  
               "default":"Key Pair Name*"
            },
            "PrivateSubnet1ID":{  
               "default":"Existing VPC Private Subnet 1 ID*"
            },
            "PrivateSubnet2ID":{  
               "default":"Existing VPC Private Subnet 2 ID*"
            },
            "PublicSubnet1ID":{  
               "default":"Existing VPC Public Subnet1 ID*"
            },
            "QSS3BucketName":{  
               "default":"Quick Start S3 Bucket Name*"
            },
            "QSS3KeyPrefix":{  
               "default":"Quick Start S3 Key Prefix"
            },
            "RemoteDesktopGatewayElasticIP":{  
               "default":"RDGW Elastic IP*"
            },
            "RedshiftDatabaseName":{  
               "default":"Redshift Database Name*"
            },
            "RedshiftPassword":{  
               "default":"Redshift Password*"
            },
            "ConfirmRedshiftPassword":{  
               "default":"Confirm Redshift Password"
            },
            "RedshiftUsername":{  
               "default":"Redshift Username*"
            },
            "IICSUsername":{  
               "default":"Username for IICS*"
            },
            "IICSPassword":{  
               "default":"Password for IICS*"
            },
            "RootStackName":{  
               "default":"Stack Name"
            },
            "TableauServerLicenseKey":{  
               "default":"Tableau Server License Key"
            },
            "VPCID":{  
               "default":"Existing VPC ID*"
            },
            "RDSInstancePassword":{  
               "default":"RDS Instance Password*"
            },
            "ConfirmRDSInstancePassword":{  
               "default":"Confirm RDS Instance Password*"
            },
            "InformaticaAdminUsername":{  
               "default":"Informatica Administrator Username*"
            },
            "InformaticaAdminPassword":{  
               "default":"Informatica Administrator Password*"
            },
            "ConfirmInformaticaAdminPassword":{  
               "default":"Confirm Informatica Administrator Password*"
            },
            "RemoteAccessCIDR":{  
               "default":"Remote Access CIDR*"
            },
            "VPCCIDR":{  
               "default":"Existing VPC CIDR*"
            }
         }
      }
   },
   "Parameters":{  
      "IICSUsername":{  
         "Description":"Informatica Intelligent Cloud Services user name",
         "Type":"String",
         "MinLength":"2"
      },
      "IICSPassword":{  
         "AllowedPattern":"[a-zA-Z0-9~`!#$%^&*()-_+={}|;:,.<>\\[\\]]*",
         "ConstraintDescription":"Between 8 and 64 chars in length; must contain at least one uppercase letter, one lowercase letter, and one number; can use any printable ASCII character (ASCII code 33 to 126) except ' (single quote), \" (double quote), \\, /, @, or space.",
         "Description":"The password associated with the Informatica Intelligent Cloud Services. ",
         "MaxLength":"64",
         "MinLength":"8",
         "NoEcho":"true",
         "Type":"String"
      },
      "EmailID":{  
         "Description":"Enter the e-mail address used for IICS registration.It is also used for the Tableau trial account.",
         "Type":"String",
         "AllowedPattern":"^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
         "ConstraintDescription":"email can have only one @. Allowed alphanumeric characters, underscore, period, hyphen and 2-5 character as domain extension"
      },
      "VPCID":{  
         "Description":"ID of the VPC (e.g., vpc-0343606e)",
         "Type":"AWS::EC2::VPC::Id",
         "MinLength":"1"
      },
      "VPCCIDR":{  
         "AllowedPattern":"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
         "ConstraintDescription":"CIDR block parameter must be in the form x.x.x.x/16-28",
         "Default":"10.0.0.0/16",
         "Description":"CIDR block for the VPC",
         "Type":"String"
      },
      "PrivateSubnet1ID":{  
         "Description":"ID of the private subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd).Please make sure to provision a public subnet and two private subnets across different EC2 Availability Zones.",
         "Type":"AWS::EC2::Subnet::Id",
         "MinLength": "1",
         "ConstraintDescription":  "Mandatory field"
      },
      "PrivateSubnet2ID":{  
         "Description":"ID of the private subnet 2 in Availability Zone 2 (e.g., subnet-a0246dcd).Please make sure to provision a public subnet and two private subnets across different EC2 Availability Zones.",
         "Type":"AWS::EC2::Subnet::Id",
         "MinLength": "1",
         "ConstraintDescription":  "Mandatory field"
      },
      "PublicSubnet1ID":{  
         "Description":"ID of the public subnet 1 in Availability Zone 1 (e.g., subnet-a0246dcd).Please make sure to provision a public subnet and two private subnets across different EC2 Availability Zones.",
         "Type":"AWS::EC2::Subnet::Id",
		 "MinLength": "1",
         "ConstraintDescription":  "Mandatory field"
      },
      "RemoteAccessCIDR":{  
         "AllowedPattern":"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
         "ConstraintDescription":"CIDR block parameter must be in the form x.x.x.x/x",
         "Description":"The CIDR IP range that is permitted to access the VPC. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses. For example, if your IPv4 address is 203.0.113.25, specify 203.0.113.25/32 to list this single IPv4 address in CIDR notation. If your company allocates addresses from a range, specify the entire range, such as 203.0.113.0/24. For details, see VPCs and Subnets in the AWS documentation.",
         "Type":"String"
      },
      "HostedZoneName":{  
         "Default":"<NONE>",
         "Description":"Name of Hosted Zone within which the Quick Start will create convenient DNS entries for AWS Resources created by the Quick Start.  If you do not need to create DNS entries or are not using AWS Route53 for DNS, enter '<NONE>', otherwise enter the Hosted Zone name including the trailing period, for example 'dev.example.com.'.",
         "Type":"String"
      },
      "RemoteDesktopGatewayElasticIP":{  
         "Default":"169.254.169.254",
         "Description":"Public IP of Remote Desktop Gateway for use in creating convenience DNS entries for AWS Resources created by the Quick Start.  If you have not specified a name in the Hosted Zone Name parameter, this parameter will not be used and can remain set to its default.",
         "Type":"String"
      },
      "RedshiftHost":{  
         "Description":"DNS Name or IP address of the master node of an existing Redshift cluster which you intend to use for the Informatica sample jobs. Leave this <NONE> to create a new Redshift cluster.The cluster should be in the VPC selected by user above.",
         "Type":"String",
         "Default":"<NONE>"
      },
      "RedshiftDatabaseName":{  
         "AllowedPattern":"([a-z]|[0-9])+",
         "ConstraintDescription":"must contain a-z or 0-9 only.",
         "Default":"quickstart",
         "Description":"The name of the database to be created in the Redshift cluster for storing visualization data.Please provide the valid database name if you are using an existing cluster for visualization data.The name must contain a-z or 0-9 only.",
         "Type":"String"
      },
      "RedshiftPassword":{  
         "AllowedPattern":"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d!#$%&\\(\\)*+,-.;<=>?\\[\\]^_`{|}~]{8,64}$",
         "ConstraintDescription":"Between 8 and 64 characters in length; must contain at least one uppercase letter, one lowercase letter, and one number; can use any printable ASCII character (ASCII code 33 to 126) except ' (single quote), \" (double quote), \\, /, @, or space.",
         "Description":"The password associated with the master user account for the Redshift cluster that is being created.It should be between 8 and 64 chars in length; must contain at least one uppercase letter, one lowercase letter, and one number",
         "MaxLength":"64",
         "MinLength":"8",
         "NoEcho":"true",
         "Type":"String"
      },
      "ConfirmRedshiftPassword":{
         "NoEcho":"true",
         "Type":"String"
      },
      "RedshiftUsername":{  
         "AllowedPattern":"([a-z])([a-z]|[0-9])*",
         "ConstraintDescription":"must start with a-z and contain only a-z or 0-9.",
         "Default":"redshift",
         "Description":"The user name associated with the master user account for the Redshift cluster that is being created.It must start with a-z and contain only a-z or 0-9.",
         "Type":"String"
      },
      "TableauServerAdminPassword":{  
         "Description":"The password for the initial Admin user for Tableau server",
         "NoEcho":"true",
         "Type":"String",
         "MinLength":"1",
         "MaxLength":"120"
      },
      "TableauServerAdminUser":{  
         "Default":"admin",
         "Description":"The name of the initial Admin user for Tableau server.Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 5 - 20",
         "MinLength":"5",
         "MaxLength":"20",
         "Type":"String",
         "AllowedPattern":"^([a-zA-Z][a-z0-9A-Z_]{4,20})$",
         "ConstraintDescription":"Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 5 - 20 characters in length"
      },
      "TableauManagerUsername":{  
         "Description":"Tableau Services Manager (TSM) administrator username (cannot be Administrator).Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 3-30 in length.",
         "Type":"String",
         "AllowedPattern":"(?!Administrator|administrator)\\b\\w{3,30}",
         "MinLength":"3",
         "MaxLength":"30",
         "Default":"admin",
         "ConstraintDescription":"Only alphanumeric characters and underscore are allowed. Should begin with an alphabet. The value must be 3-30 characters in length."
      },
      "TableauManagerPassword":{  
         "Description":"Tableau Services Manager (TSM) administrator password.Password must be at least 8 characters in length. Should contain at least one special character, number, upper-case and lower-case character. Double quote(\") and dollar($) is not allowed",
         "Type":"String",
         "NoEcho":"true",
         "AllowedPattern":"^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[^\\s\\w])(?!.*[\"$]).{8,120}$",
         "MinLength":"8",
         "MaxLength":"120",
         "ConstraintDescription":"Password must be at least 8 characters in length. Should contain at least one special character, number, upper-case and lower-case character. Double quote(\") and dollar($) are  not allowed"
      },
      "TableauServerLicenseKey":{  
         "Default":"",
         "Description":"License Key (leave blank for trial)",
         "Type":"String"
      },
      "RDSInstancePassword":{  
         "Description":"Password for the database instance associated with Informatica services and Tableau Server tasks.It must contain between 8 to 30 printable ASCII characters (excluding /,\", and @).",
         "Type":"String",
         "NoEcho":"True",
         "MinLength":"8",
         "MaxLength":"30",
         "AllowedPattern":"([A-Za-z0-9_!#$]{8,30})",
         "ConstraintDescription":"It must contain between 8 to 30 printable ASCII characters (excluding /,\", and @)."
      },
      "ConfirmRDSInstancePassword":{  
         "Description":"Password for the database instance associated with Informatica services and Tableau Server tasks.It must contain between 8 to 30 printable ASCII characters (excluding /,\", and @).",
         "Type":"String",
         "NoEcho":"True",
         "MinLength":"8",
         "MaxLength":"30",
         "AllowedPattern":"([A-Za-z0-9_!#$]{8,30})",
         "ConstraintDescription":"It must contain between 8 to 30 printable ASCII characters (excluding /,\", and @)."
      },
      "InformaticaAdminUsername":{  
         "Description":"Username to access Informatica Administrator.Username must be between 4 to 15 characters and start with a character. Only alphanumeric characters and underscore allowed.",
         "Type":"String",
         "MinLength":"4",
         "MaxLength":"15",
         "AllowedPattern":"^([a-zA-Z][a-zA-Z0-9_]{3,15})$",
         "ConstraintDescription":"User name must be between 4 to 15 characters and start with a character. Only alphanumeric characters and underscore allowed."
      },
      "InformaticaAdminPassword":{  
         "Description":"Password to access Informatica Administrator.Password must be between 5 to 64 characters and start with a character. Only alphanumeric characters and underscore allowed.",
         "Type":"String",
         "NoEcho":"True",
         "MinLength":"5",
         "MaxLength":"64",
         "AllowedPattern":"^([a-zA-Z][a-zA-Z0-9_]{4,64})$",
         "ConstraintDescription":"Password must be between 5 to 64 characters and start with a character. Only alphanumeric characters and underscore allowed."
      },
      "ConfirmInformaticaAdminPassword":{  
         "Description":"Password to access Informatica Administrator.Password must be between 5 to 64 characters and start with a character. Only alphanumeric characters and underscore allowed.",
         "Type":"String",
         "NoEcho":"True",
         "MinLength":"5",
         "MaxLength":"64",
         "AllowedPattern":"^([a-zA-Z][a-zA-Z0-9_]{4,64})$",
         "ConstraintDescription":"Password must be between 5 to 64 characters and start with a character. Only alphanumeric characters and underscore allowed."
      },
      "KeyPairName":{  
         "Description":"Name of existing EC2 public/private key pair, which allows you to connect securely to instances deployed with the Quick Start after they launch.  When you created an AWS account, this is the key pair you created in your preferred region.  Enter the name of the keypair.",
         "Type":"AWS::EC2::KeyPair::KeyName",
         "MinLength": "1",
         "ConstraintDescription":  "Specifying Key Pair Name is mandatory "
      },
      "RootStackName":{  
         "Default":"<NONE>",
         "Description":"Name of Top-Level Stack.",
         "Type":"String"
      },
      "QSS3BucketName":{  
         "AllowedPattern":"(?=^.{3,63}$)(?!^(\\d+\\.)+\\d+$)(^([a-z0-9]|[a-z0-9][a-z0-9\\-]*[a-z0-9])$)",
         "ConstraintDescription":"Quick Start bucket name can include numbers, lowercase letters and hyphens (-). It cannot start or end with a hyphen (-).",
         "Default":"aws-quickstart-informatica-tableau",
         "Description":"S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters and hyphens (-). It cannot start or end with a hyphen (-).",
         "Type":"String"
      },
      "QSS3KeyPrefix":{  
         "AllowedPattern":"^[0-9a-z-/]*$",
         "ConstraintDescription":"Quick Start key prefix can include numbers, lowercase letters, hyphens (-), and forward slash (/).",
         "Default":"",
         "Description":"S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, hyphens (-), and forward slash (/).",
         "Type":"String"
      }
   },
   "Mappings":{  
      "InformaticaConfiguration":{  
         "InstallationConfig":{  
            "InstallationBucket":"aws-informatica-tableau-analytics-resources",
			"TableauDatasetsubfolder":"tableau-resources",
			"InformaticaKeyfolder":"informatica",
            "InstallationLicenseKey":"AWS_Quckstart_Trial_00000_172604.key"
         }
      }
   },
   "Rules":{  
      "SubnetsInVPC":{  
         "Assertions":[  
            {  
               "Assert":{  
                  "Fn::EachMemberIn":[  
                     {  
                        "Fn::ValueOfAll":[  
                           "AWS::EC2::Subnet::Id",
                           "VpcId"
                        ]
                     },
                     {  
                        "Fn::RefAll":"AWS::EC2::VPC::Id"
                     }
                  ]
               },
               "AssertDescription":"All subnets must in the VPC"
            }
         ]
      },
      "matchDBPasswords":{  
         "Assertions":[  
            {  
               "Assert":{  
                  "Fn::Equals":[  
                     {  
                        "Ref":"RDSInstancePassword"
                     },
                     {  
                        "Ref":"ConfirmRDSInstancePassword"
                     }
                  ]
               },
               "AssertDescription":"Passwords do not match"
            }
         ]
      },
      "matchAdministratorPasswords":{  
         "Assertions":[  
            {  
               "Assert":{  
                  "Fn::Equals":[  
                     {  
                        "Ref":"InformaticaAdminPassword"
                     },
                     {  
                        "Ref":"ConfirmInformaticaAdminPassword"
                     }
                  ]
               },
               "AssertDescription":"Passwords do not match"
            }
         ]
      },
      "matchRedshiftPasswords":{  
	  	 "RuleCondition" : {  
         "Fn::Equals":[  
            "<NONE>",
            {  
               "Ref":"RedshiftHost"
            }
         ]
      },
         "Assertions":[  
            {  
               "Assert":{  
                  "Fn::Equals":[  
                     {  
                        "Ref":"RedshiftPassword"
                     },
                     {  
                        "Ref":"ConfirmRedshiftPassword"
                     }
                  ]
               },
               "AssertDescription":"Passwords do not match"
            }
         ]
      }
   },
   "Conditions":{  
      "CreateRedshiftCondition":{  
         "Fn::Equals":[  
            "<NONE>",
            {  
               "Ref":"RedshiftHost"
            }
         ]
      },
      "HostedZoneIsSpecifiedCondition":{  
         "Fn::Not":[  
            {  
               "Fn::Equals":[  
                  {  
                     "Ref":"HostedZoneName"
                  },
                  "<NONE>"
               ]
            }
         ]
      },
      "RootStackNameIsSpecifiedCondition":{  
         "Fn::Not":[  
            {  
               "Fn::Equals":[  
                  {  
                     "Ref":"RootStackName"
                  },
                  "<NONE>"
               ]
            }
         ]
      },
      "GovCloudCondition":{  
         "Fn::Equals":[  
            {  
               "Ref":"AWS::Region"
            },
            "us-gov-west-1"
         ]
      }
   },
   "Resources":{  
      "LambdaStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":[  
                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/lambda.template",
                  {  
                     "QSS3Region":{  
                        "Fn::If":[  
                           "GovCloudCondition",
                           "s3-us-gov-west-1",
                           "s3"
                        ]
                     }
                  }
               ]
            },
            "Parameters":{  
               "IICSPassword":{  
                  "Ref":"IICSPassword"
               },
               "IICSUsername":{  
                  "Ref":"IICSUsername"
               }
            }
         }
      },
	  "LambdaMappingStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":[  
                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/mapping.template",
                  {  
                     "QSS3Region":{  
                        "Fn::If":[  
                           "GovCloudCondition",
                           "s3-us-gov-west-1",
                           "s3"
                        ]
                     }
                  }
               ]
            },
            "Parameters":{  
               "IICSPassword":{  
                  "Ref":"IICSPassword"
               },
               "IICSUsername":{  
                  "Ref":"IICSUsername"
               }
            }
         }
      },
	   "LambdaLicenseStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":[  
                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/license.template",
                  {  
                     "QSS3Region":{  
                        "Fn::If":[  
                           "GovCloudCondition",
                           "s3-us-gov-west-1",
                           "s3"
                        ]
                     }
                  }
               ]
            },
            "Parameters":{  
               "IICSPassword":{  
                  "Ref":"IICSPassword"
               },
               "IICSUsername":{  
                  "Ref":"IICSUsername"
               }
            }
         }
      },
      "RedshiftClusterStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":["LambdaStack","LambdaMappingStack","LambdaLicenseStack"],
         "Condition":"CreateRedshiftCondition",
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":[  
                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/redshift-cluster.template",
                  {  
                     "QSS3Region":{  
                        "Fn::If":[  
                           "GovCloudCondition",
                           "s3-us-gov-west-1",
                           "s3"
                        ]
                     }
                  }
               ]
            },
            "Parameters":{  
               "VPC":{  
                  "Ref":"VPCID"
               },
               "ClusterSubnetID":{  
                  "Ref":"PrivateSubnet1ID"
               },
               "DatabaseName":{  
                  "Ref":"RedshiftDatabaseName"
               },
               "ClusterType":"single-node",
               "MasterUsername":{  
                  "Ref":"RedshiftUsername"
               },
               "MasterUserPassword":{  
                  "Ref":"RedshiftPassword"
               },
               "InboundTraffic":{  
                  "Ref":"VPCCIDR"
               }
            }
         }
      },
      "TableauServerStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":["LambdaStack","LambdaMappingStack","LambdaLicenseStack"],
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":[  
                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/tableau-single-server.template",
                  {  
                     "QSS3Region":{  
                        "Fn::If":[  
                           "GovCloudCondition",
                           "s3-us-gov-west-1",
                           "s3"
                        ]
                     }
                  }
               ]
            },
            "Parameters":{  
               "TableauServerAdminPassword":{  
                  "Ref":"TableauServerAdminPassword"
               },
               "TableauServerAdminUser":{  
                  "Ref":"TableauServerAdminUser"
               },
               "KeyPairName":{  
                  "Ref":"KeyPairName"
               },
               "TableauServerLicenseKey":{  
                  "Ref":"TableauServerLicenseKey"
               },
               "Username":{  
                  "Ref":"TableauManagerUsername"
               },
               "Password":{  
                  "Ref":"TableauManagerPassword"
               },
               "TableauServerNetInterface":{  
                  "Fn::GetAtt":[  
                     "InformaticaEDCSecurityGroupsStack",
                     "Outputs.TableauServerNetInterface"
                  ]
               },
               "RegEmail":{  
                  "Ref":"EmailID"
               },
               "RDSDatabasePort":"1521",
               "RDSHost":{  
                  "Fn::GetAtt":[  
                     "RDSStack",
                     "Outputs.EndpointAddress"
                  ]
               },
               "RDSPassword":{  
                  "Ref":"RDSInstancePassword"
               },
               "RedshiftDatabaseName":{  
                  "Ref":"RedshiftDatabaseName"
               },
               "RedshiftDatabasePort":"5439",
               "RedshiftHost":{  
                  "Fn::If":[  
                     "CreateRedshiftCondition",
                     {  
                        "Fn::GetAtt":[  
                           "RedshiftClusterStack",
                           "Outputs.RedshiftHost"
                        ]
                     },
                     {  
                        "Ref":"RedshiftHost"
                     }
                  ]
               },
               "RedshiftPassword":{  
                  "Ref":"RedshiftPassword"
               },
               "RedshiftUsername":{  
                  "Ref":"RedshiftUsername"
               },
			   "DemoDataBucket":{  
                    "Fn::FindInMap":[  
                        "InformaticaConfiguration",
                        "InstallationConfig",
                        "InstallationBucket"
                    ]
                },
				
				"DemoDataBucketFolder":{ 
                  "Fn::Join":[  
                              "",
                                
							  [
							    {  
                                    "Fn::FindInMap":[  
                                       "InformaticaConfiguration",
                                       "InstallationConfig",
                                       "TableauDatasetsubfolder"
                                    ]
                                 },
								 "/"
								 ]]
								 
            }
         }
      }
	  
	  },
      "S3BucketStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":["LambdaStack","LambdaMappingStack","LambdaLicenseStack"],
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":"http://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/informatica-s3-bucket.template"
            },
            "Parameters":{  

            }
         }
      },
      "IamStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":["LambdaStack","LambdaMappingStack","LambdaLicenseStack"],
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":"http://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/informatica-iam.template"
            },
            "Parameters":{  
               "QSS3BucketName":{  
                  "Ref":"QSS3BucketName"
               },
               "QSS3KeyPrefix":{  
                  "Fn::Sub":"${QSS3KeyPrefix}"
               },
               "StackRoot":{  
                  "Fn::Sub":"${AWS::StackName}"
               },
               "IICSTaskBucketName":{  
                  "Fn::GetAtt":[  
                     "S3BucketStack",
                     "Outputs.InformaticaS3Bucket"
                  ]
               }
            }
         }
      },
      "InformaticaEDCSecurityGroupsStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":["LambdaStack","LambdaMappingStack","LambdaLicenseStack"],
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":"http://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/informatica-security-group.template"
            },
            "Parameters":{  
               "VPCID":{  
                  "Ref":"VPCID"
               },
               "PublicSubnetA":{  
                  "Ref":"PublicSubnet1ID"
               },
               "RemoteAccessCIDR":{  
                  "Ref":"RemoteAccessCIDR"
               },
               "VPCCIDR":{  
                  "Ref":"VPCCIDR"
               }
            }
         }
      },
      "RDSStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":[  
            "InformaticaEDCSecurityGroupsStack",
            "LambdaStack",
			"LambdaMappingStack",
			"LambdaLicenseStack"
         ],
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":"http://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/informatica-rds.template"
            },
            "Parameters":{  
               "DBSubnetIDs":{  
                  "Fn::Join":[  
                     ",",
                     [  
                        {  
                           "Ref":"PrivateSubnet1ID"
                        },
                        {  
                           "Ref":"PrivateSubnet2ID"
                        }
                     ]
                  ]
               },
               "InfaDBSecurityGroup":{  
                  "Fn::GetAtt":[  
                     "InformaticaEDCSecurityGroupsStack",
                     "Outputs.InfaDBSecurityGroup"
                  ]
               },
               "MasterDbPassword":{  
                  "Ref":"RDSInstancePassword"
               }
            }
         }
      },
      "InformaticaHadoopNodeStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":[  
            "InformaticaEDCSecurityGroupsStack",
            "IamStack",
            "LambdaStack",
			"LambdaMappingStack",
			"LambdaLicenseStack"
         ],
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":"http://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/informatica-ihs.template"
            },
            "Parameters":{  
               "InstanceProfile":{  
                  "Fn::GetAtt":[  
                     "IamStack",
                     "Outputs.InstanceProfile"
                  ]
               },
               "KeyPairName":{  
                  "Ref":"KeyPairName"
               },
               "NetworkInterface":{  
                  "Fn::GetAtt":[  
                     "InformaticaEDCSecurityGroupsStack",
                     "Outputs.NetworkInterface"
                  ]
               }
            }
         }
      },
      "InformaticEDCStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":[  
            "InformaticaEDCSecurityGroupsStack",
            "LambdaStack",
            "IamStack",
            "RDSStack",
            "InformaticaHadoopNodeStack",
			"LambdaMappingStack",
			"LambdaLicenseStack"
         ],
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":"http://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/informatica-eic.template"
            },
            "Parameters":{  
               "InformaticaInstanceProfile":{  
                  "Fn::GetAtt":[  
                     "IamStack",
                     "Outputs.InstanceProfile"
                  ]
               },
               "InformaticaInstanceRole":{  
                  "Fn::GetAtt":[  
                     "IamStack",
                     "Outputs.InstanceRole"
                  ]
               },
               "KeyPairName":{  
                  "Ref":"KeyPairName"
               },
               "RedshiftUsername":{  
                  "Ref":"RedshiftUsername"
               },
               "RedshiftPassword":{  
                  "Ref":"RedshiftPassword"
               },
               "RedshiftDatabaseName":{  
                  "Ref":"RedshiftDatabaseName"
               },
               "DBEndpointAddress":{  
                  "Fn::GetAtt":[  
                     "RDSStack",
                     "Outputs.EndpointAddress"
                  ]
               },
               "HadoopGatewayPrivateIp":{  
                  "Fn::GetAtt":[  
                     "InformaticaHadoopNodeStack",
                     "Outputs.HadoopGatewayPrivateIp"
                  ]
               },
               "HadoopGatewayPublicDNSName":{  
                  "Fn::GetAtt":[  
                     "InformaticaHadoopNodeStack",
                     "Outputs.HadoopGatewayPublicDNSName"
                  ]
               },
               "HadoopGatewayPrivateDNSName":{  
                  "Fn::GetAtt":[  
                     "InformaticaHadoopNodeStack",
                     "Outputs.HadoopGatewayPrivateDNSName"
                  ]
               },
               "AdministrationServerNetInterface":{  
                  "Fn::GetAtt":[  
                     "InformaticaEDCSecurityGroupsStack",
                     "Outputs.AdministrationServerNetInterface"
                  ]
               },
               "InformaticaKeyS3Bucket":{  
                                    "Fn::FindInMap":[  
                                       "InformaticaConfiguration",
                                       "InstallationConfig",
                                       "InstallationBucket"
                                    ]
                                 },
               "InformaticaKeyName":{"Fn::Join":[  
                              "",
                                
							  [
							    {  
                                    "Fn::FindInMap":[  
                                       "InformaticaConfiguration",
                                       "InstallationConfig",
                                       "InformaticaKeyfolder"
                                    ]
                                 },
								 "/",
								 {  
                                    "Fn::FindInMap":[  
                                       "InformaticaConfiguration",
                                       "InstallationConfig",
                                       "InstallationLicenseKey"
                                    ]
                                 }
								 ]]
								 },
								 
               "RedshiftHost":{  
                  "Fn::If":[  
                     "CreateRedshiftCondition",
                     {  
                        "Fn::GetAtt":[  
                           "RedshiftClusterStack",
                           "Outputs.RedshiftHost"
                        ]
                     },
                     {  
                        "Ref":"RedshiftHost"
                     }
                  ]
               },
               "InformaticaAdminUsername":{  
                  "Ref":"InformaticaAdminUsername"
               },
               "InformaticaAdminPassword":{  
                  "Ref":"InformaticaAdminPassword"
               },
               "IICSTaskBucketName":{  
                  "Fn::GetAtt":[  
                     "S3BucketStack",
                     "Outputs.InformaticaS3Bucket"
                  ]
               },
               "ICSPassword":{  
                  "Ref":"IICSPassword"
               },
               "Username":{  
                  "Ref":"IICSUsername"
               },
               "TableauPrivateIp":{  
                  "Fn::GetAtt":[  
                     "InformaticaEDCSecurityGroupsStack",
                     "Outputs.TableauIpAddress"
                  ]
               },
               "TableauUsername":{  
                  "Ref":"TableauServerAdminUser"
               },
               "TableauPassword":{  
                  "Ref":"TableauServerAdminPassword"
               },
               "DBPassword":{  
                  "Ref":"RDSInstancePassword"
               }
            }
         
      }
	  },
      "DnsRecordSetStack":{  
         "Type":"AWS::CloudFormation::Stack",
         "DependsOn":[  
            "TableauServerStack",
            "LambdaStack",
			"LambdaMappingStack",
			"LambdaLicenseStack"
         ],
         "Condition":"HostedZoneIsSpecifiedCondition",
         "Properties":{  
            "TemplateURL":{  
               "Fn::Sub":[  
                  "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/route53-recordsets.template",
                  {  
                     "QSS3Region":{  
                        "Fn::If":[  
                           "GovCloudCondition",
                           "s3-us-gov-west-1",
                           "s3"
                        ]
                     }
                  }
               ]
            },
            "Parameters":{  
               "RootStackName":{  
                  "Fn::If":[  
                     "RootStackNameIsSpecifiedCondition",
                     {  
                        "Ref":"RootStackName"
                     },
                     {  
                        "Ref":"AWS::StackName"
                     }
                  ]
               },
               "HostedZoneName":{  
                  "Ref":"HostedZoneName"
               },
               "RDGWElasticIP":{  
                  "Ref":"RemoteDesktopGatewayElasticIP"
               },
               "TableauServerPublicDnsName":{  
                  "Fn::GetAtt":[  
                     "TableauServerStack",
                     "Outputs.PublicDnsName"
                  ]
               },
               "TableauServerPrivateDnsName":{  
                  "Fn::GetAtt":[  
                     "TableauServerStack",
                     "Outputs.PrivateDnsName"
                  ]
               },
               "RedshiftPrivateDnsName":{  
                  "Fn::If":[  
                     "CreateRedshiftCondition",
                     {  
                        "Fn::GetAtt":[  
                           "RedshiftClusterStack",
                           "Outputs.RedshiftHost"
                        ]
                     },
                     {  
                        "Ref":"RedshiftHost"
                     }
                  ]
               },
               "InformaticaHadoopPublicDnsName":{  
                  "Fn::GetAtt":[  
                     "InformaticaHadoopNodeStack",
                     "Outputs.HadoopGatewayPublicDNSName"
                  ]
               },
               "InformaticaHadoopPrivateDnsName":{  
                  "Fn::GetAtt":[  
                     "InformaticaHadoopNodeStack",
                     "Outputs.HadoopGatewayPrivateDNSName"
                  ]
               },
               "InformaticaDomainPublicDnsName":{  
                  "Fn::GetAtt":[  
                     "InformaticEDCStack",
                     "Outputs.InformaticaPublicDNSName"
                  ]
               },
               "InformaticaDomainPrivateDnsName":{  
                  "Fn::GetAtt":[  
                     "InformaticEDCStack",
                     "Outputs.InformaticaPrivateDNSName"
                  ]
               },
               "RDSPrivateDnsName":{  
                  "Fn::GetAtt":[  
                     "RDSStack",
                     "Outputs.EndpointAddress"
                  ]
               }
            }
         }
      }
   
   },
   "Outputs":{  
      "TableauServerURL":{  
         "Description":"URL through which Tableau Server can be accessed.",
         "Value":{  
            "Fn::Join":[  
               "",
               [  
                  "http://",
                  {  
                     "Fn::If":[  
                        "HostedZoneIsSpecifiedCondition",
                        {  
                           "Fn::GetAtt":[  
                              "DnsRecordSetStack",
                              "Outputs.TableauServerPublicName"
                           ]
                        },
                        {  
                           "Fn::GetAtt":[  
                              "TableauServerStack",
                              "Outputs.PublicDnsName"
                           ]
                        }
                     ]
                  },
                  "/"
               ]
            ]
         }
      },
	   "RDGWPublicName":{  
         "Description":"Convenient Name for RDGW Public Access",
         "Value":{  
            "Fn::If":[  
               "HostedZoneIsSpecifiedCondition",
               {  
                  "Fn::GetAtt":[  
                     "DnsRecordSetStack",
                     "Outputs.RDGWPublicName"
                  ]
               },
               {  
                  "Ref":"RemoteDesktopGatewayElasticIP"
               }
            ]
         }
      },
	  "EDCCatalogUrl":{  
         "Description":"URL through which EDC Catalog Url can be accessed.",
         "Value":{  
            "Fn::Join":[  
               "",
               [  
                  "https://",
                  {  
                     "Fn::If":[  
                        "HostedZoneIsSpecifiedCondition",
                        {  
                           "Fn::GetAtt":[  
                              "DnsRecordSetStack",
                              "Outputs.InformaticaDomainPublicName"
                           ]
                        },
                        {  
                           "Fn::GetAtt":[  
                              "InformaticEDCStack",
                              "Outputs.InformaticaPublicDNSName"
                           ]
                        }
                     ]
                  },
                  ":8085/ldmcatalog"
               ]
            ]
         }
      },
	  "EDCAdminUrl":{  
         "Description":"URL through which EDC Admin can be accessed.",
         "Value":{  
            "Fn::Join":[  
               "",
               [  
                  "https://",
                  {  
                     "Fn::If":[  
                        "HostedZoneIsSpecifiedCondition",
                        {  
                           "Fn::GetAtt":[  
                              "DnsRecordSetStack",
                              "Outputs.InformaticaDomainPublicName"
                           ]
                        },
                        {  
                           "Fn::GetAtt":[  
                              "InformaticEDCStack",
                              "Outputs.InformaticaPublicDNSName"
                           ]
                        }
                     ]
                  },
                  ":8085/ldmadmin"
               ]
            ]
         }
      },
	  "InformaticaAdminConsoleURL":{  
         "Description":"URL through which Informatica Admin Console can be accessed.",
         "Value":{  
            "Fn::Join":[  
               "",
               [  
                  "https://",
                  {  
                     "Fn::If":[  
                        "HostedZoneIsSpecifiedCondition",
                        {  
                           "Fn::GetAtt":[  
                              "DnsRecordSetStack",
                              "Outputs.InformaticaDomainPublicName"
                           ]
                        },
                        {  
                           "Fn::GetAtt":[  
                              "InformaticEDCStack",
                              "Outputs.InformaticaPublicDNSName"
                           ]
                        }
                     ]
                  },
                  ":6005"
               ]
            ]
         }
      },
	    "InformaticaDomainPublicName":{  
         "Description":"Convenient Name for Informatica Domain Public Access",
         "Value":{  
            "Fn::If":[  
               "HostedZoneIsSpecifiedCondition",
               {  
                  "Fn::GetAtt":[  
                     "DnsRecordSetStack",
                     "Outputs.InformaticaDomainPublicName"
                  ]
               },
               {  
                  "Fn::GetAtt":[  
                     "InformaticEDCStack",
                     "Outputs.InformaticaPublicDNSName"
                  ]
               }
            ]
         }
      },
      "TableauServerPublicName":{  
         "Description":"Convenient Name for TableauServer Public Access",
         "Value":{  
            "Fn::If":[  
               "HostedZoneIsSpecifiedCondition",
               {  
                  "Fn::GetAtt":[  
                     "DnsRecordSetStack",
                     "Outputs.TableauServerPublicName"
                  ]
               },
               {  
                  "Fn::GetAtt":[  
                     "TableauServerStack",
                     "Outputs.PublicDnsName"
                  ]
               }
            ]
         }
      },
      "TableauServerPrivateName":{  
         "Description":"Convenient Name for TableauServer Private Access",
         "Value":{  
            "Fn::If":[  
               "HostedZoneIsSpecifiedCondition",
               {  
                  "Fn::GetAtt":[  
                     "DnsRecordSetStack",
                     "Outputs.TableauServerPrivateName"
                  ]
               },
               {  
                  "Fn::GetAtt":[  
                     "TableauServerStack",
                     "Outputs.PrivateDnsName"
                  ]
               }
            ]
         }
      },
      "RedshiftPrivateName":{  
         "Description":"Convenient Name for Redshift Private Access",
         "Value":{  
            "Fn::If":[  
               "HostedZoneIsSpecifiedCondition",
               {  
                  "Fn::GetAtt":[  
                     "DnsRecordSetStack",
                     "Outputs.RedshiftPrivateName"
                  ]
               },
               {  
                  "Fn::If":[  
                     "CreateRedshiftCondition",
                     {  
                        "Fn::GetAtt":[  
                           "RedshiftClusterStack",
                           "Outputs.RedshiftHost"
                        ]
                     },
                     {  
                        "Ref":"RedshiftHost"
                     }
                  ]
               }
            ]
         }
      },
	   
	   "RDSPrivateName": {
            "Description": "Convenient Name for Postgres RDS Private Access",
            "Value": {
                "Fn::If": [
                    "HostedZoneIsSpecifiedCondition",
                    {
                        "Fn::GetAtt": [
                            "DnsRecordSetStack",
                            "Outputs.RDSPrivateName"
                        ]
                    },
                    {
                        "Fn::GetAtt": [
                            "RDSStack",
                            "Outputs.EndpointAddress"
                        ]
                    }
                ]
            }
        }
        
   }
}

